name: Notify on published OTel blog post

on:
  pull_request:
    types:
      - closed

jobs:
  check_is_otel:
    name: Check is OTel
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    outputs:
      is_otel: ${{ steps.otel.outputs.capturedContent == 'opentelemetry' }}
    steps:
    - name: Is OTel
      id: otel
      uses: AlexanderWert/github-extract-content-from-pr-diff@1.0.1
      with:
        github-token: ${{github.token}}
        pathToScan: "_content/articles"
        newFilesOnly: true
        regex: '^\+\s+-\s?slug:\s*"?(opentelemetry)"?\s*$'
  add_to_project:
    name: Run job
    runs-on: ubuntu-latest
    needs: check_is_otel
    if: needs.check_is_otel.outputs.is_otel == 'true'
    steps:
    - name: Extract slug
      id: slug
      uses: AlexanderWert/github-extract-content-from-pr-diff@1.0.1
      with:
        github-token: ${{github.token}}
        pathToScan: "_content/articles"
        newFilesOnly: true
        regex: '^\+slug:\s*"?([\w-]+)"?\s*$'
    - name: Show article slug
      run: echo "Article slug is '${{ steps.slug.outputs.capturedContent }}'"
    - name: Extract title
      id: title
      uses: AlexanderWert/github-extract-content-from-pr-diff@1.0.1
      with:
        github-token: ${{github.token}}
        pathToScan: "_content/articles"
        newFilesOnly: true
        regex: '^\+title:\s*"(.+)"\s*$'
    - name: Show article title
      run: echo "Article title is '${{ steps.title.outputs.capturedContent }}'"
